name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install package and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest-cov pytest-asyncio
        pip install -e .
        echo "✅ Package installation completed"

    - name: Verify installation
      run: |
        python -c "import monitoring; print('✅ Package imports successful')"
        python -c "import pytest; print('✅ Pytest available')"
        python -c "import pytest_asyncio; print('✅ Pytest-asyncio available')"
        echo "📋 Environment info:"
        python --version
        pip list | grep -E "(pytest|coverage|dash|fastapi)"

    - name: Debug test discovery
      run: |
        echo "🔍 Discovering tests..."
        echo "📁 Tests directory structure:"
        ls -la tests/
        echo "📄 All test files:"
        find tests/ -name "test_*.py" -type f

    - name: Run core framework tests
      run: |
        echo "🧪 Running core framework tests..."
        python -m pytest tests/test_monitoring.py -v --cov=monitoring --cov=api --cov=dashboard --cov-fail-under=50 --tb=short -W ignore::RuntimeWarning --asyncio-mode=auto
        echo "✅ Core framework tests completed"
        
    - name: Run LLM metrics tests
      run: |
        echo "🔍 Running LLM metrics tests..."
        python tests/test_llm_metrics.py
        echo "✅ LLM metrics tests completed"
        
    - name: Run focused metrics system tests  
      run: |
        echo "🔍 Running focused metrics system tests..."
        python tests/test_focused_metrics.py
        echo "✅ Focused metrics system tests completed"
        
    - name: Run enhanced system metrics validation
      run: |
        echo "🔍 Running enhanced system metrics tests..."
        python tests/test_enhanced_system_metrics.py
        echo "✅ Enhanced system metrics tests completed"
        
    - name: Validate focused monitoring system
      run: |
        echo "🔍 Validating focused monitoring system integration..."
        python -c "
        from monitoring.metrics_focused import FocusedSystemMetricsCollector
        from monitoring.models_focused import FocusedSystemMetrics
        collector = FocusedSystemMetricsCollector()
        metrics = collector.get_metrics()
        print(f'✅ Focused metrics collection working: {type(metrics).__name__}')
        print(f'   Memory pressure: {metrics.memory_pressure:.1f}%')
        print(f'   System health score: {metrics.health_score}/100')
        "
        echo "✅ Focused monitoring system validation completed" 